version: '3'

services:
  workspace:
    container_name: nextclade_workspace
    restart: always
    build:
      args:
        uid: ${UID}
      context: ./backend
    volumes:
      - ./backend/:/nextclade/backend/
      - ./data/:/nextclade/backend/upload
      - /nextclade/backend/node_modules
    depends_on:
      mysql-db:
        condition: service_healthy
    working_dir: /nextclade/backend/
    environment:
      - MAIL_SERVICE=${MAIL_SERVICE}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    ports:
      - '5050:5050'
    networks:
      - nextclade

  mysql-db:
    image: mysql:8
    container_name: nextclade_mysql
    restart: always
    expose:
      - '3306'
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10
    networks:
      - nextclade

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: nextclade_phpmyadmin
    restart: always
    ports:
      - '5055:80'
    environment:
      PMA_HOST: mysql-db
      PMA_PORT: 3306
    depends_on:
      - mysql-db
    networks:
      - nextclade

  ubuntu:
    container_name: nextclade_ubuntu
    build:
      args:
        user: khaitd0340
        uid: ${UID}
        password: ${USER_PASSWORD}
      context: ./ubuntu
      dockerfile: ubuntu.Dockerfile
    command: bash
    tty: true
    volumes:
      - ./data/:/augur/augur_data
      - ./ubuntu/script:/augur/augur_script
    working_dir: /augur
    ports:
      - '2222:22'
    networks:
      - nextclade

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/nextclade/frontend
      - /nextclade/frontend/node_modules
    # develop:
    #   watch:
    #     - path: ./frontend/src
    #       target: /nextclade/frontend/src
    #       action: sync+restart
    working_dir: /nextclade/frontend
    command: npm run build
    container_name: nextclade_frontend
    networks:
      - nextclade

  nginx:
    build:
      context: ./nginx
    ports:
      - '8088:8088'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    volumes_from:
      - frontend
    depends_on:
      - frontend
      - workspace
    container_name: nextclade_nginx
    networks:
      - nextclade

networks:
  nextclade:
    driver: bridge
